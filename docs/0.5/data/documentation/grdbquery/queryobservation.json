{"seeAlsoSections":[{"title":"The @Query property wrapper","identifiers":["doc:\/\/GRDBQuery\/documentation\/GRDBQuery\/GettingStarted","doc:\/\/GRDBQuery\/documentation\/GRDBQuery\/QueryableParameters","doc:\/\/GRDBQuery\/documentation\/GRDBQuery\/Query","doc:\/\/GRDBQuery\/documentation\/GRDBQuery\/Queryable"],"generated":true}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"QueryObservation"}],"title":"QueryObservation","roleHeading":"Enumeration","role":"symbol","symbolKind":"enum","externalID":"s:9GRDBQuery16QueryObservationO","modules":[{"name":"GRDBQuery"}],"navigatorTitle":[{"kind":"identifier","text":"QueryObservation"}]},"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"QueryObservation"},{"type":"text","text":" controls when "},{"type":"codeVoice","code":"@Query"},{"type":"text","text":" property wrappers are observing"},{"type":"text","text":" "},{"type":"text","text":"their requests."}],"sections":[],"identifier":{"url":"doc:\/\/GRDBQuery\/documentation\/GRDBQuery\/QueryObservation","interfaceLanguage":"swift"},"relationshipsSections":[{"identifiers":["doc:\/\/GRDBQuery\/SQ","doc:\/\/GRDBQuery\/SH"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"hierarchy":{"paths":[["doc:\/\/GRDBQuery\/documentation\/GRDBQuery"]]},"topicSections":[{"title":"Enumeration Cases","identifiers":["doc:\/\/GRDBQuery\/documentation\/GRDBQuery\/QueryObservation\/always","doc:\/\/GRDBQuery\/documentation\/GRDBQuery\/QueryObservation\/onAppear","doc:\/\/GRDBQuery\/documentation\/GRDBQuery\/QueryObservation\/onRender"]},{"title":"Default Implementations","identifiers":["doc:\/\/GRDBQuery\/documentation\/GRDBQuery\/QueryObservation\/Equatable-Implementations"],"generated":true}],"variants":[{"paths":["\/documentation\/grdbquery\/queryobservation"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"QueryObservation"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"By default, "},{"type":"codeVoice","code":"@Query"},{"type":"text","text":" observes its "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GRDBQuery\/documentation\/GRDBQuery\/Queryable"},{"type":"text","text":" request for the whole"},{"type":"text","text":" "},{"type":"text","text":"duration of the presence of the view in the SwiftUI engine: it subscribes"},{"type":"text","text":" "},{"type":"text","text":"to the request publisher before the first "},{"type":"codeVoice","code":"body"},{"type":"text","text":" rendering, and cancels the"},{"type":"text","text":" "},{"type":"text","text":"subscription when the view is no longer rendered."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can spare resources by stopping request observation when views are not"},{"type":"text","text":" "},{"type":"text","text":"on screen, with the "},{"type":"codeVoice","code":"View.queryObservation(_:)"},{"type":"text","text":" method. It enables request"},{"type":"text","text":" "},{"type":"text","text":"observation in the chosen time intervals, for all "},{"type":"codeVoice","code":"@Query"},{"type":"text","text":" property wrappers"},{"type":"text","text":" "},{"type":"text","text":"embedded in the view."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Given this general timeline of SwiftUI events:"}]},{"type":"codeListing","syntax":null,"code":["Initial body rendering","|    onAppear              onAppear","|    |         onDisappear |         onDisappear","|    |         |           |         |      End","|    |         |           |         |      |","•----•---------•-----------•---------•------•--> time"]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"type":"codeVoice","code":".always"},{"type":"text","text":" (the default) for subscribing before the first "},{"type":"codeVoice","code":"body"},{"type":"text","text":" "},{"type":"text","text":"rendering, until the view leaves the SwiftUI engine:"}]},{"type":"codeListing","syntax":"swift","code":["\/\/ Initial body rendering                      End","\/\/ |                                           |","\/\/ <···········································>","\/\/ •----•---------•-----------•---------•------•--> time","MyView().queryObservation(.always)"]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"type":"codeVoice","code":".onRender"},{"type":"text","text":" for subscribing before the first "},{"type":"codeVoice","code":"body"},{"type":"text","text":" rendering, and"},{"type":"text","text":" "},{"type":"text","text":"then using the "},{"type":"codeVoice","code":"onDisappear"},{"type":"text","text":" and "},{"type":"codeVoice","code":"onAppear"},{"type":"text","text":" SwiftUI events for pausing"},{"type":"text","text":" "},{"type":"text","text":"the subscription:"}]},{"type":"codeListing","syntax":"swift","code":["\/\/ Initial body rendering","\/\/ |              onDisappear onAppear  onDisappear","\/\/ |              |           |         |","\/\/ <··············>           <·········>","\/\/ •----•---------•-----------•---------•------•--> time","MyView().queryObservation(.onRender)"]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"type":"codeVoice","code":".onAppear"},{"type":"text","text":" for letting the "},{"type":"codeVoice","code":"onDisappear"},{"type":"text","text":" and "},{"type":"codeVoice","code":"onAppear"},{"type":"text","text":" SwiftUI"},{"type":"text","text":" "},{"type":"text","text":"events control the subscription duration:"}]},{"type":"codeListing","syntax":"swift","code":["\/\/      onAppear  onDisappear onAppear  onDisappear","\/\/      |         |           |         |","\/\/      <·········>           <·········>","\/\/ •----•---------•-----------•---------•------•--> time","MyView().queryObservation(.onAppear)"]}]}]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Only "},{"type":"codeVoice","code":".onRender"},{"type":"text","text":" and "},{"type":"codeVoice","code":".always"},{"type":"text","text":" have "},{"type":"codeVoice","code":"@Query"},{"type":"text","text":" feed a view on its"},{"type":"text","text":" "},{"type":"text","text":"initial "},{"type":"codeVoice","code":"body"},{"type":"text","text":" rendering. This avoids SwiftUI animations for the initial"},{"type":"text","text":" "},{"type":"text","text":"rendering of database values."}]}],"type":"aside","name":"Note"},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Unless the request publisher publishes its initial value right on"},{"type":"text","text":" "},{"type":"text","text":"subscription, "},{"type":"codeVoice","code":".onRender"},{"type":"text","text":" and "},{"type":"codeVoice","code":".onAppear"},{"type":"text","text":" will have your view display"},{"type":"text","text":" "},{"type":"text","text":"obsolete database values when they re-appear. See "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GRDBQuery\/documentation\/GRDBQuery\/GettingStarted"},{"type":"text","text":" "},{"type":"text","text":"for more information about "},{"type":"emphasis","inlineContent":[{"type":"text","text":"immediate"}]},{"type":"text","text":" database publishers."}]}],"type":"aside","name":"Note"},{"style":"tip","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"For "},{"type":"emphasis","inlineContent":[{"type":"text","text":"fast and immediate"}]},{"type":"text","text":" database publishers that publish their"},{"type":"text","text":" "},{"type":"text","text":"initial value right on subscription, "},{"type":"codeVoice","code":"QueryObservation.always"},{"type":"text","text":" and"},{"type":"text","text":" "},{"type":"codeVoice","code":".onRender"},{"type":"text","text":" should fit most application needs."}]}],"type":"aside","name":"Tip"},{"style":"tip","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"For "},{"type":"emphasis","inlineContent":[{"type":"text","text":"slow and asynchronous"}]},{"type":"text","text":" database publishers that publish all"},{"type":"text","text":" "},{"type":"text","text":"their values asynchronously, prefer "},{"type":"codeVoice","code":"QueryObservation.always"},{"type":"text","text":", in order to"},{"type":"text","text":" "},{"type":"text","text":"reduce the probability that the application user can see obsolete"},{"type":"text","text":" "},{"type":"text","text":"database values."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can also consider using "},{"type":"codeVoice","code":".onAppear"},{"type":"text","text":", and prepending your request"},{"type":"text","text":" "},{"type":"text","text":"publisher with a sentinel value that will allow your view to display a"},{"type":"text","text":" "},{"type":"text","text":"loading indicator instead of obsolete database values, when the view"},{"type":"text","text":" "},{"type":"text","text":"appears or re-appears."}]}],"type":"aside","name":"Tip"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When the built-in strategies do not fit the needs of your application, do"},{"type":"text","text":" "},{"type":"text","text":"not use "},{"type":"codeVoice","code":"View.queryObservation(_:)"},{"type":"text","text":". Instead, deal directly with the"},{"type":"text","text":" "},{"type":"codeVoice","code":"\\.queryObservationEnabled"},{"type":"text","text":" environment key:"}]},{"type":"codeListing","syntax":"swift","code":["\/\/ Disables observation","MyView().environment(\\.queryObservationEnabled, false)","","\/\/ Enables observation","MyView().environment(\\.queryObservationEnabled, true)"]}]}],"references":{"doc://GRDBQuery/documentation/GRDBQuery":{"role":"collection","title":"GRDBQuery","abstract":[{"type":"text","text":"The SwiftUI companion for GRDB"}],"identifier":"doc:\/\/GRDBQuery\/documentation\/GRDBQuery","kind":"symbol","type":"topic","url":"\/documentation\/grdbquery"},"doc://GRDBQuery/documentation/GRDBQuery/GettingStarted":{"role":"collectionGroup","title":"Getting Started with @Query","abstract":[{"type":"text","text":"A step-by-step guide for using "},{"type":"codeVoice","code":"@Query"},{"type":"text","text":" in your SwiftUI application."}],"identifier":"doc:\/\/GRDBQuery\/documentation\/GRDBQuery\/GettingStarted","kind":"article","type":"topic","url":"\/documentation\/grdbquery\/gettingstarted"},"doc://GRDBQuery/documentation/GRDBQuery/QueryObservation/onAppear":{"role":"symbol","title":"QueryObservation.onAppear","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"onAppear"}],"abstract":[{"type":"text","text":"Request observation starts and stops according to the "},{"type":"codeVoice","code":"onAppear"},{"type":"text","text":" and"},{"type":"text","text":" "},{"type":"codeVoice","code":"onDisappear"},{"type":"text","text":" View events."}],"identifier":"doc:\/\/GRDBQuery\/documentation\/GRDBQuery\/QueryObservation\/onAppear","kind":"symbol","type":"topic","url":"\/documentation\/grdbquery\/queryobservation\/onappear"},"doc://GRDBQuery/documentation/GRDBQuery/Query":{"role":"symbol","title":"Query","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Query"}],"abstract":[{"type":"text","text":"A property wrapper that subscribes to its "},{"type":"codeVoice","code":"Request"},{"type":"text","text":" (a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GRDBQuery\/documentation\/GRDBQuery\/Queryable"},{"type":"text","text":" "},{"type":"text","text":"type), and invalidates a SwiftUI view whenever the database values change."}],"identifier":"doc:\/\/GRDBQuery\/documentation\/GRDBQuery\/Query","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Query"}],"url":"\/documentation\/grdbquery\/query"},"doc://GRDBQuery/documentation/GRDBQuery/QueryObservation/always":{"role":"symbol","title":"QueryObservation.always","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"always"}],"abstract":[{"type":"text","text":"Requests are always observed."}],"identifier":"doc:\/\/GRDBQuery\/documentation\/GRDBQuery\/QueryObservation\/always","kind":"symbol","type":"topic","url":"\/documentation\/grdbquery\/queryobservation\/always"},"doc://GRDBQuery/documentation/GRDBQuery/QueryObservation/Equatable-Implementations":{"role":"collectionGroup","title":"Equatable Implementations","abstract":[],"identifier":"doc:\/\/GRDBQuery\/documentation\/GRDBQuery\/QueryObservation\/Equatable-Implementations","kind":"article","type":"topic","url":"\/documentation\/grdbquery\/queryobservation\/equatable-implementations"},"doc://GRDBQuery/SH":{"type":"unresolvable","title":"Swift.Hashable","identifier":"doc:\/\/GRDBQuery\/SH"},"doc://GRDBQuery/SQ":{"type":"unresolvable","title":"Swift.Equatable","identifier":"doc:\/\/GRDBQuery\/SQ"},"doc://GRDBQuery/documentation/GRDBQuery/Queryable":{"role":"symbol","title":"Queryable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Queryable"}],"abstract":[{"type":"codeVoice","code":"Queryable"},{"type":"text","text":" types feed the the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/GRDBQuery\/documentation\/GRDBQuery\/Query"},{"type":"text","text":" property wrapper."}],"identifier":"doc:\/\/GRDBQuery\/documentation\/GRDBQuery\/Queryable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Queryable"}],"url":"\/documentation\/grdbquery\/queryable"},"doc://GRDBQuery/documentation/GRDBQuery/QueryObservation":{"role":"symbol","title":"QueryObservation","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"QueryObservation"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"QueryObservation"},{"type":"text","text":" controls when "},{"type":"codeVoice","code":"@Query"},{"type":"text","text":" property wrappers are observing"},{"type":"text","text":" "},{"type":"text","text":"their requests."}],"identifier":"doc:\/\/GRDBQuery\/documentation\/GRDBQuery\/QueryObservation","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"QueryObservation"}],"url":"\/documentation\/grdbquery\/queryobservation"},"doc://GRDBQuery/documentation/GRDBQuery/QueryableParameters":{"role":"article","title":"Adding Parameters to Queryable Types","abstract":[{"type":"text","text":"Learn how SwiftUI views can configure the database content displayed on screen."}],"identifier":"doc:\/\/GRDBQuery\/documentation\/GRDBQuery\/QueryableParameters","kind":"article","type":"topic","url":"\/documentation\/grdbquery\/queryableparameters"},"doc://GRDBQuery/documentation/GRDBQuery/QueryObservation/onRender":{"role":"symbol","title":"QueryObservation.onRender","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"onRender"}],"abstract":[{"type":"text","text":"Request observation starts on the first "},{"type":"codeVoice","code":"body"},{"type":"text","text":" rendering of the view,"},{"type":"text","text":" "},{"type":"text","text":"and is later stopped and restarted according to the "},{"type":"codeVoice","code":"onAppear"},{"type":"text","text":" and"},{"type":"text","text":" "},{"type":"codeVoice","code":"onDisappear"},{"type":"text","text":" View events."}],"identifier":"doc:\/\/GRDBQuery\/documentation\/GRDBQuery\/QueryObservation\/onRender","kind":"symbol","type":"topic","url":"\/documentation\/grdbquery\/queryobservation\/onrender"}}}